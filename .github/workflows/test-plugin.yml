name: Triton-Shared Plugin Testing

on:
  workflow_call:
    inputs:
      triton-ref:
        required: false
        type: string
      triton-shared-ref:
        required: true
        type: string
      force-failure:
        default: false
        type: boolean
  workflow_dispatch:
    inputs:
      triton-ref:
        required: false
        type: string
      triton-shared-ref:
        required: true
        type: string
      force-failure:
        default: false
        type: boolean


jobs:
  build_and_test_triton_shared:
    runs-on: ubuntu-latest

    steps:
    - name: Force Failure
      if: ${{ inputs.force-failure }}
      run: exit 1

    - name: Checkout Triton-Shared
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.triton-shared-ref }}
        path: triton_shared
        # Also checkout triton submodule
        submodules: recursive

    - name: Checkout triton at ${{ inputs.triton-ref }}
      if: ${{ inputs.triton-ref }}
      working-directory: triton_shared/triton
      run: |
        git checkout ${{ inputs.triton-ref }}
        git log -1

    - name: Clear Triton Cache
      run: |
        rm -rf ~/.triton

    - name: Update PATH
      run: |
        echo "PATH=${HOME}/.local/bin:${PATH}" >> "${GITHUB_ENV}"

    - name: Build/Install Triton
      working-directory: triton_shared/triton/python
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install cmake==3.24 ninja pytest-xdist pybind11
        sudo apt-get update -y
        sudo apt-get install -y ccache clang lld
        export TRITON_PLUGIN_DIRS="${GITHUB_WORKSPACE}/triton_shared"
        TRITON_BUILD_WITH_CLANG_LLD=true TRITON_BUILD_WITH_CCACHE=true python3 -m pip install --no-build-isolation -vvv '.[tests]'

    - name: Prepare CPU backend environment
      working-directory: triton_shared/triton/python
      run: |
        CMAKE_BUILD_DIR=$(ls $(pwd)/build | grep -i cmake)
        LLVM_BIN_DIR=$(find  ${HOME}/.triton/llvm/ -name bin | head -1)

        ls $(pwd)/build
        echo "---"
        ls ${HOME}/.triton/llvm/
        echo "cmake: +${CMAKE_BUILD_DIR}+"
        echo "llvm: +${LLVM_BIN_DIR}+"


        echo "TRITON_SHARED_OPT_PATH=$(pwd)/build/${CMAKE_BUILD_DIR}/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt" >> "${GITHUB_ENV}"
        echo "LLVM_BINARY_DIR=${HOME}/.triton/llvm/${LLVM_BIN_DIR}" >> "${GITHUB_ENV}"


  build_and_test_triton_shared_arm:
    runs-on: ["self-hosted", "1ES.Pool=triton-shared-github-arm"]

    steps:
    - name: Check Architecture
      run: uname -a

    - name: Force Failure
      if: ${{ inputs.force-failure }}
      run: exit 1


    - name: Checkout Triton-Shared
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.triton-shared-ref }}
        path: triton_shared
        submodules: recursive

    - name: Clear Triton Cache
      run: |
        rm -rf ~/.triton

    - name: Modify Instance
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential ninja-build python3-pip libc6
    - name: Update PATH
      run: |
        echo "PATH=${HOME}/.local/bin:${PATH}" >> "${GITHUB_ENV}"

    - name: Build/Install Triton
      working-directory: triton_shared/triton/python
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install cmake==3.24 ninja pytest-xdist pybind11
        sudo apt-get update -y
        sudo apt-get install -y ccache clang lld
        export TRITON_PLUGIN_DIRS="${GITHUB_WORKSPACE}/triton_shared"
        TRITON_BUILD_WITH_CLANG_LLD=true TRITON_BUILD_WITH_CCACHE=true python3 -m pip install --no-build-isolation -vvv '.[tests]'

    - name: Prepare CPU backend environment
      working-directory: triton_shared/triton/python
      run: |
        CMAKE_BUILD_DIR=$(ls $(pwd)/build | grep -i cmake)
        LLVM_BIN_DIR=$(find  ${HOME}/.triton/llvm/ -name bin | head -1)

        ls $(pwd)/build
        echo "---"
        ls ${HOME}/.triton/llvm/
        echo "cmake: +${CMAKE_BUILD_DIR}+"
        echo "llvm: +${LLVM_BIN_DIR}+"


        echo "TRITON_SHARED_OPT_PATH=$(pwd)/build/${CMAKE_BUILD_DIR}/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt" >> "${GITHUB_ENV}"
        echo "LLVM_BINARY_DIR=${HOME}/.triton/llvm/${LLVM_BIN_DIR}" >> "${GITHUB_ENV}"
