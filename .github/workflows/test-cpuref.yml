name: Triton-Shared Plugin Testing

on:
  workflow_call:
    inputs:
      triton-ref:
        required: true
        type: string
      triton-shared-ref:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      triton-ref:
        required: true
        type: string
      triton-shared-ref:
        required: true
        type: string

jobs:
  build_and_test_triton_shared:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout Triton
      uses: actions/checkout@v4
      with:
        repository: 'openai/triton'
        ref: ${{ inputs.triton-ref }}
        path: triton
        submodules: 'recursive'

    - name: Checkout Triton-Shared
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.triton-shared-ref }}
        path: triton/third_party/triton_shared

    - name: Clear Triton Cache
      run: |
        rm -rf ~/.triton

    - name: Update PATH
      run: |
        echo "PATH=${HOME}/.local/bin:${PATH}" >> "${GITHUB_ENV}"

    - name: Check pre-commit
      run: |
        cd triton
        python3 -m pip install --upgrade pre-commit
        python3 -m pre_commit run --all-files --verbose

    - name: Build/Install Triton
      run: |
        export TRITON_CODEGEN_TRITON_SHARED=1
        cd triton/python
        python3 -m pip install --upgrade pip
        python3 -m pip install cmake==3.24
        python3 -m pip install ninja
        python3 -m pip uninstall -y triton
        python3 setup.py build
        python3 -m pip install --no-build-isolation -vvv '.[tests]'

    - name: Install PyTorch
      run: |
        python3 -m pip install torch --index-url https://download.pytorch.org/whl/cpu

    - name: Run an example
      run: |
        cd triton/python
        export TRITON_SHARED_OPT_PATH="$(pwd)/build/$(ls $(pwd)/build | grep -i cmake)/third_party/triton_shared/tools/triton-shared-opt/triton-shared-opt"
        export LLVM_BINARY_DIR="${HOME}/.triton/llvm/$(ls ${HOME}/.triton/llvm/ | grep -i llvm)/bin"
        python3 ../third_party/triton_shared/python/examples/reduce.py
